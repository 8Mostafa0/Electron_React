export declare const enum HASHES {
    sha1 = "sha1",
    sha256 = "sha256"
}
export type SignOptions = SignOptionsForDirectory | SignOptionsForFiles;
export interface SignOptionsForDirectory extends SignToolOptions {
    appDirectory: string;
}
export interface SignOptionsForFiles extends SignToolOptions {
    files: Array<string>;
}
export interface SignToolOptions extends OptionalSignToolOptions, OptionalHookOptions {
}
export interface InternalSignOptions extends SignOptionsForFiles {
}
export interface InternalSignToolOptions extends OptionalSignToolOptions, OptionalHookOptions {
    certificateFile?: string;
    certificatePassword?: string;
    signToolPath: string;
    timestampServer: string;
    files: Array<string>;
    hash: HASHES;
    appendSignature?: boolean;
}
export interface OptionalSignToolOptions {
    certificateFile?: string;
    certificatePassword?: string;
    timestampServer?: string;
    description?: string;
    website?: string;
    signToolPath?: string;
    signWithParams?: string | Array<string>;
    debug?: boolean;
    automaticallySelectCertificate?: boolean;
    signJavaScript?: boolean;
}
export type HookFunction = (fileToSign: string) => void | Promise<void>;
export interface OptionalHookOptions {
    hookFunction?: HookFunction;
    hookModulePath?: string;
}
export interface InternalHookOptions extends OptionalHookOptions {
    files: Array<string>;
}
